/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package electionspoo.gui;

import electionspoo.beanbuilder.ElectorBeanBuilder;
import electionspoo.beans.elector.ElectorBean;
import electionspoo.beans.elector.ElectorList;
import electionspoo.utils.Constants;
import electionspoo.utils.MainUtils;
import electionspoo.utils.enums.Errors;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Tiago
 */
public class GUIElector extends javax.swing.JDialog {

    private int GUIListSelectedIndex = 0;
    //static ArrayList<ElectorBean> ElectorList.getList() = new ArrayList<>();

    //lista todos os electors guardados no ficheiro
    private void updateGUIList() {
        //forcar selecionar o index anterior a cada edição 
        int tempSelectedIndex = GUIListSelectedIndex;
        MainUtils.listaGUIElector.removeAllElements();
        for (int i = 0; i < ElectorList.getList().size(); i++) {
            MainUtils.listaGUIElector.addElement(ElectorList.getGUIListLine(ElectorList.getList().get(i)));
        }
        GUIElectorList.setSelectedIndex(tempSelectedIndex);
    }

    /**
     * Creates new form GUIElector
     *
     * @param parent
     * @param modal
     * @throws java.io.IOException
     * @throws java.io.FileNotFoundException
     * @throws java.lang.ClassNotFoundException
     * @throws java.text.ParseException
     */
    public GUIElector(java.awt.Frame parent, boolean modal) throws IOException, FileNotFoundException, ClassNotFoundException, ParseException, Exception {
        super(parent, modal);
        initComponents();
        GUIElectorList.setModel(MainUtils.listaGUIElector);
        updateGUIList();
        GUIElectorList.setSelectedIndex(GUIListSelectedIndex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseFileDialog = new javax.swing.JDialog();
        Exception = new javax.swing.JDialog();
        GUIElectorBtnSave = new javax.swing.JButton();
        GUIElectorBtnOpen = new javax.swing.JButton();
        GUIElectorBtnNew = new javax.swing.JButton();
        GUIElectorBtnSort = new javax.swing.JButton();
        GUIElectorBtnSearch = new javax.swing.JButton();
        GUIElectorBtnClose = new javax.swing.JButton();
        GUIElectorPanelElectorList = new javax.swing.JScrollPane();
        GUIElectorList = new javax.swing.JList<>();
        GUIElectorPanelBottomNav = new javax.swing.JPanel();
        GUIElectorBtnFirst = new javax.swing.JButton();
        GUIElectorBtnPrev = new javax.swing.JButton();
        GUIElectorBtnNext = new javax.swing.JButton();
        GUIElectorBtnLast = new javax.swing.JButton();
        GUIElectorPanelElector = new javax.swing.JPanel();
        GUIElectorTxtBoxName = new javax.swing.JTextField();
        GUIElectorTxtBoxCC = new javax.swing.JTextField();
        GUIElectorGender = new javax.swing.JComboBox<>();
        GUIElectorBtnNewElector = new javax.swing.JButton();
        GUIElectorBtnDeleteElector = new javax.swing.JButton();
        GUIElectorBtnRandomElector = new javax.swing.JButton();
        GUIElectorPanelImage = new javax.swing.JPanel();
        GUIElectorLabel2Image = new javax.swing.JLabel();
        GUIElectorIdadeLbl = new javax.swing.JLabel();
        GUIElectorTxtBoxBirth = new javax.swing.JTextField();
        GUIElectorTxtBoxPw = new javax.swing.JTextField();
        GUIElectorTxtBoxPw2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        GUIElectorPanelElectorNum = new javax.swing.JPanel();
        GUIElectorNumLbl = new javax.swing.JLabel();
        GUIElectorTxtBoxSearch = new javax.swing.JTextField();

        javax.swing.GroupLayout chooseFileDialogLayout = new javax.swing.GroupLayout(chooseFileDialog.getContentPane());
        chooseFileDialog.getContentPane().setLayout(chooseFileDialogLayout);
        chooseFileDialogLayout.setHorizontalGroup(
            chooseFileDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        chooseFileDialogLayout.setVerticalGroup(
            chooseFileDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ExceptionLayout = new javax.swing.GroupLayout(Exception.getContentPane());
        Exception.getContentPane().setLayout(ExceptionLayout);
        ExceptionLayout.setHorizontalGroup(
            ExceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        ExceptionLayout.setVerticalGroup(
            ExceptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        GUIElectorBtnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/save_file.png"))); // NOI18N
        GUIElectorBtnSave.setText("Guardar");
        GUIElectorBtnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GUIElectorBtnSave.setVerifyInputWhenFocusTarget(false);
        GUIElectorBtnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GUIElectorBtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnSaveActionPerformed(evt);
            }
        });

        GUIElectorBtnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/open_file.png"))); // NOI18N
        GUIElectorBtnOpen.setText("Abrir");
        GUIElectorBtnOpen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GUIElectorBtnOpen.setVerifyInputWhenFocusTarget(false);
        GUIElectorBtnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GUIElectorBtnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnOpenActionPerformed(evt);
            }
        });

        GUIElectorBtnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/newElection.png"))); // NOI18N
        GUIElectorBtnNew.setText("Novo");
        GUIElectorBtnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GUIElectorBtnNew.setVerifyInputWhenFocusTarget(false);
        GUIElectorBtnNew.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GUIElectorBtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnNewActionPerformed(evt);
            }
        });

        GUIElectorBtnSort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/sort.png"))); // NOI18N
        GUIElectorBtnSort.setText("Ordenar");
        GUIElectorBtnSort.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnSort.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GUIElectorBtnSort.setVerifyInputWhenFocusTarget(false);
        GUIElectorBtnSort.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GUIElectorBtnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnSortActionPerformed(evt);
            }
        });

        GUIElectorBtnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_find.png"))); // NOI18N
        GUIElectorBtnSearch.setText("Pesquisar");
        GUIElectorBtnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GUIElectorBtnSearch.setVerifyInputWhenFocusTarget(false);
        GUIElectorBtnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GUIElectorBtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnSearchActionPerformed(evt);
            }
        });

        GUIElectorBtnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/exit.png"))); // NOI18N
        GUIElectorBtnClose.setText("Sair");
        GUIElectorBtnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GUIElectorBtnClose.setVerifyInputWhenFocusTarget(false);
        GUIElectorBtnClose.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GUIElectorBtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnCloseActionPerformed(evt);
            }
        });

        GUIElectorPanelElectorList.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Eleitores"));

        GUIElectorList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                GUIElectorListValueChanged(evt);
            }
        });
        GUIElectorPanelElectorList.setViewportView(GUIElectorList);

        GUIElectorPanelBottomNav.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        GUIElectorBtnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_first.png"))); // NOI18N
        GUIElectorBtnFirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnFirstActionPerformed(evt);
            }
        });

        GUIElectorBtnPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_prev.png"))); // NOI18N
        GUIElectorBtnPrev.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnPrevActionPerformed(evt);
            }
        });

        GUIElectorBtnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_next.png"))); // NOI18N
        GUIElectorBtnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnNextActionPerformed(evt);
            }
        });

        GUIElectorBtnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_last.png"))); // NOI18N
        GUIElectorBtnLast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GUIElectorPanelBottomNavLayout = new javax.swing.GroupLayout(GUIElectorPanelBottomNav);
        GUIElectorPanelBottomNav.setLayout(GUIElectorPanelBottomNavLayout);
        GUIElectorPanelBottomNavLayout.setHorizontalGroup(
            GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelBottomNavLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GUIElectorBtnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GUIElectorBtnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(GUIElectorBtnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GUIElectorBtnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        GUIElectorPanelBottomNavLayout.setVerticalGroup(
            GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelBottomNavLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GUIElectorBtnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GUIElectorBtnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(GUIElectorPanelBottomNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GUIElectorBtnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(GUIElectorBtnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        GUIElectorPanelElector.setBorder(javax.swing.BorderFactory.createTitledBorder("Eleitor"));

        GUIElectorTxtBoxName.setText("Teste");
        GUIElectorTxtBoxName.setBorder(javax.swing.BorderFactory.createTitledBorder("Nome"));
        GUIElectorTxtBoxName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                GUIElectorTxtBoxNameFocusLost(evt);
            }
        });
        GUIElectorTxtBoxName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                GUIElectorTxtBoxNameInputMethodTextChanged(evt);
            }
        });
        GUIElectorTxtBoxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorTxtBoxNameActionPerformed(evt);
            }
        });
        GUIElectorTxtBoxName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GUIElectorTxtBoxNameKeyReleased(evt);
            }
        });

        GUIElectorTxtBoxCC.setText("12345678");
        GUIElectorTxtBoxCC.setBorder(javax.swing.BorderFactory.createTitledBorder("Cartão de Cidadão"));
        GUIElectorTxtBoxCC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                GUIElectorTxtBoxCCFocusLost(evt);
            }
        });
        GUIElectorTxtBoxCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorTxtBoxCCActionPerformed(evt);
            }
        });
        GUIElectorTxtBoxCC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GUIElectorTxtBoxCCKeyReleased(evt);
            }
        });

        GUIElectorGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));
        GUIElectorGender.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                GUIElectorGenderItemStateChanged(evt);
            }
        });
        GUIElectorGender.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                GUIElectorGenderInputMethodTextChanged(evt);
            }
        });
        GUIElectorGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorGenderActionPerformed(evt);
            }
        });

        GUIElectorBtnNewElector.setText("Novo");
        GUIElectorBtnNewElector.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnNewElector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnNewElectorActionPerformed(evt);
            }
        });

        GUIElectorBtnDeleteElector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_delete.png"))); // NOI18N
        GUIElectorBtnDeleteElector.setText("Eliminar");
        GUIElectorBtnDeleteElector.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnDeleteElector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnDeleteElectorActionPerformed(evt);
            }
        });

        GUIElectorBtnRandomElector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/nav_update.png"))); // NOI18N
        GUIElectorBtnRandomElector.setText("Gerar Aleatório");
        GUIElectorBtnRandomElector.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        GUIElectorBtnRandomElector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorBtnRandomElectorActionPerformed(evt);
            }
        });

        GUIElectorPanelImage.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        GUIElectorLabel2Image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GUIElectorLabel2Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/electionspoo/multimedia/about.png"))); // NOI18N

        javax.swing.GroupLayout GUIElectorPanelImageLayout = new javax.swing.GroupLayout(GUIElectorPanelImage);
        GUIElectorPanelImage.setLayout(GUIElectorPanelImageLayout);
        GUIElectorPanelImageLayout.setHorizontalGroup(
            GUIElectorPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelImageLayout.createSequentialGroup()
                .addComponent(GUIElectorLabel2Image, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        GUIElectorPanelImageLayout.setVerticalGroup(
            GUIElectorPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(GUIElectorLabel2Image, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
        );

        GUIElectorIdadeLbl.setText("Idade..");

        GUIElectorTxtBoxBirth.setText("06/06/2001");
        GUIElectorTxtBoxBirth.setBorder(javax.swing.BorderFactory.createTitledBorder("Data de Nascimento"));
        GUIElectorTxtBoxBirth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                GUIElectorTxtBoxBirthFocusLost(evt);
            }
        });
        GUIElectorTxtBoxBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorTxtBoxBirthActionPerformed(evt);
            }
        });

        GUIElectorTxtBoxPw.setText("123");
        GUIElectorTxtBoxPw.setBorder(javax.swing.BorderFactory.createTitledBorder("Password"));
        GUIElectorTxtBoxPw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GUIElectorTxtBoxPwActionPerformed(evt);
            }
        });

        GUIElectorTxtBoxPw2.setText("123");
        GUIElectorTxtBoxPw2.setBorder(javax.swing.BorderFactory.createTitledBorder("Confirmar Password"));
        GUIElectorTxtBoxPw2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                GUIElectorTxtBoxPw2FocusLost(evt);
            }
        });

        jButton1.setText("Ler Imagem");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GUIElectorPanelElectorLayout = new javax.swing.GroupLayout(GUIElectorPanelElector);
        GUIElectorPanelElector.setLayout(GUIElectorPanelElectorLayout);
        GUIElectorPanelElectorLayout.setHorizontalGroup(
            GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelElectorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GUIElectorTxtBoxName)
                    .addGroup(GUIElectorPanelElectorLayout.createSequentialGroup()
                        .addGroup(GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(GUIElectorBtnNewElector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GUIElectorTxtBoxCC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GUIElectorGender, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GUIElectorTxtBoxBirth, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GUIElectorTxtBoxPw, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GUIElectorTxtBoxPw2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GUIElectorBtnRandomElector, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GUIElectorPanelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GUIElectorIdadeLbl)
                            .addComponent(GUIElectorBtnDeleteElector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        GUIElectorPanelElectorLayout.setVerticalGroup(
            GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelElectorLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(GUIElectorTxtBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GUIElectorPanelElectorLayout.createSequentialGroup()
                        .addComponent(GUIElectorIdadeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GUIElectorPanelImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GUIElectorPanelElectorLayout.createSequentialGroup()
                        .addComponent(GUIElectorTxtBoxCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(GUIElectorGender, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GUIElectorTxtBoxBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(GUIElectorTxtBoxPw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(GUIElectorTxtBoxPw2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GUIElectorBtnRandomElector)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(GUIElectorPanelElectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GUIElectorBtnDeleteElector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GUIElectorBtnNewElector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout GUIElectorPanelElectorNumLayout = new javax.swing.GroupLayout(GUIElectorPanelElectorNum);
        GUIElectorPanelElectorNum.setLayout(GUIElectorPanelElectorNumLayout);
        GUIElectorPanelElectorNumLayout.setHorizontalGroup(
            GUIElectorPanelElectorNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GUIElectorPanelElectorNumLayout.createSequentialGroup()
                .addComponent(GUIElectorNumLbl)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        GUIElectorPanelElectorNumLayout.setVerticalGroup(
            GUIElectorPanelElectorNumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GUIElectorPanelElectorNumLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(GUIElectorNumLbl))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GUIElectorBtnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GUIElectorBtnOpen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GUIElectorBtnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GUIElectorBtnSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GUIElectorBtnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GUIElectorTxtBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GUIElectorBtnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 146, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GUIElectorPanelElectorList)
                            .addComponent(GUIElectorPanelBottomNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GUIElectorPanelElectorNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GUIElectorPanelElector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(GUIElectorBtnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GUIElectorBtnSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GUIElectorBtnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GUIElectorBtnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GUIElectorBtnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GUIElectorBtnClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(GUIElectorTxtBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GUIElectorPanelElectorList)
                        .addGap(12, 12, 12)
                        .addComponent(GUIElectorPanelElectorNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GUIElectorPanelBottomNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(GUIElectorPanelElector, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GUIElectorBtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnCloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_GUIElectorBtnCloseActionPerformed

    private void GUIElectorTxtBoxCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxCCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GUIElectorTxtBoxCCActionPerformed

    private void GUIElectorBtnNewElectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnNewElectorActionPerformed

        ElectorList.getList().add(new ElectorBean());
        updateGUIList();
        GUIElectorList.setSelectedIndex(ElectorList.getList().size() - 1);
    }//GEN-LAST:event_GUIElectorBtnNewElectorActionPerformed

    private void GUIElectorTxtBoxPwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxPwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GUIElectorTxtBoxPwActionPerformed

    private void GUIElectorBtnRandomElectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnRandomElectorActionPerformed

        try {
            int quantidadeEleitores = Integer.parseInt(JOptionPane.showInputDialog(chooseFileDialog,
                    Constants.gerarEleitorPopUpText, Constants.gerarEleitorPopUpTitle, JOptionPane.QUESTION_MESSAGE));

            //Create Elector bean
            for (int i = 0; i < quantidadeEleitores; i++) {
                ElectorBean electorBean = ElectorBeanBuilder.buildRandomElectorBean();

                //Save elector to the list
                ElectorList.getList().add(electorBean);
                
                updateGUIList();
                GUIElectorList.setSelectedIndex(ElectorList.getList().size() - 1);
               
            }
        } catch (NumberFormatException | ParseException e){
            JOptionPane.showMessageDialog(Exception, Errors.NumberFormatIncorret.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, e);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(Exception, Errors.UnavailableFunctionality.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_GUIElectorBtnRandomElectorActionPerformed

    private void GUIElectorBtnDeleteElectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnDeleteElectorActionPerformed

        boolean deleteUserConfirmation = JOptionPane.showConfirmDialog(chooseFileDialog, Constants.eliminarEleitorPopUpText, Constants.gerarEleitorPopUpTitle, JOptionPane.YES_NO_OPTION) == 0;

        try {
            if(deleteUserConfirmation){
                ElectorList.deleteElectorFromList(GUIListSelectedIndex);
                updateGUIList();
                GUIElectorList.setSelectedIndex(0);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(Exception, Errors.FileManipulation.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(Exception, Errors.ErrorExecutingAction.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(Exception, Errors.UnavailableFunctionality.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GUIElectorBtnDeleteElectorActionPerformed

    private void GUIElectorBtnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnLastActionPerformed
        // TODO add your handling code here:
        GUIElectorList.setSelectedIndex(ElectorList.getList().size() - 1);
    }//GEN-LAST:event_GUIElectorBtnLastActionPerformed

    private void GUIElectorBtnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnNextActionPerformed
        if (GUIListSelectedIndex < ElectorList.getList().size() - 1) {
            GUIListSelectedIndex++;
            GUIElectorList.setSelectedIndex(GUIListSelectedIndex);
        }
    }//GEN-LAST:event_GUIElectorBtnNextActionPerformed

    private void GUIElectorListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_GUIElectorListValueChanged
        // TODO add your handling code here:

        int selections[] = GUIElectorList.getSelectedIndices();
        GUIListSelectedIndex = GUIElectorList.getSelectedIndex();
        for (int i = 0, n = selections.length; i < n; i++) {
            GUIElectorTxtBoxName.setText(ElectorList.getList().get(selections[i]).getName());
            GUIElectorTxtBoxCC.setText(String.valueOf(ElectorList.getList().get(selections[i]).getCC()));
            if (ElectorList.getList().get(selections[i]).getGender() == ('M')) {
                GUIElectorGender.setSelectedIndex(0);
            } else {
                GUIElectorGender.setSelectedIndex(1);
            }
            GUIElectorTxtBoxBirth.setText(ElectorList.getList().get(selections[i]).getBirthDate());
            GUIElectorTxtBoxPw.setText(ElectorList.getList().get(selections[i]).getPassword());
            GUIElectorTxtBoxPw2.setText(ElectorList.getList().get(selections[i]).getPassword());

            //atualiza label de numeraçao
            GUIElectorNumLbl.setText("Registo " + (selections[i] + 1) + "/" + ElectorList.getList().size());

            //idade GUIElectorIdadeLbl
            GUIElectorIdadeLbl.setText(MainUtils.getPersonAge(ElectorList.getList().get(selections[i]).getBirthDate()) + " anos");

            //foto to label
            if (ElectorList.getList().get(selections[i]).getPhoto() != null) {
                GUIElectorLabel2Image.setIcon(MainUtils.resizeIcon(ElectorList.getList().get(selections[i]).getPhoto(), GUIElectorLabel2Image.getWidth(), GUIElectorLabel2Image.getHeight()));
            } else {
                GUIElectorLabel2Image.setIcon(MainUtils.resizeIcon(new ImageIcon(getClass().getResource(Constants.personResource)), GUIElectorLabel2Image.getWidth(), GUIElectorLabel2Image.getHeight()));
            } 

        }


    }//GEN-LAST:event_GUIElectorListValueChanged

    private void GUIElectorBtnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnPrevActionPerformed
        // TODO add your handling code here:
        if (GUIListSelectedIndex > 0) {
            GUIListSelectedIndex--;
            GUIElectorList.setSelectedIndex(GUIListSelectedIndex);
        }

    }//GEN-LAST:event_GUIElectorBtnPrevActionPerformed

    private void GUIElectorBtnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnFirstActionPerformed
        // TODO add your handling code here:
        GUIElectorList.setSelectedIndex(0);
    }//GEN-LAST:event_GUIElectorBtnFirstActionPerformed

    private void GUIElectorBtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnSaveActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser();
            ElectorList electorList = new ElectorList();
            fileChooser.setCurrentDirectory(new File(System.getProperty(Constants.userSystemDir)));
            int result = fileChooser.showOpenDialog(chooseFileDialog);
            if (result == JFileChooser.APPROVE_OPTION) {
                String selectedFile = fileChooser.getSelectedFile().getAbsolutePath();
                electorList.save(selectedFile);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(Exception, Errors.FileManipulation.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(Exception, Errors.ErrorExecutingAction.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, e);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(Exception, Errors.UnavailableFunctionality.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GUIElectorBtnSaveActionPerformed

    private void GUIElectorBtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnNewActionPerformed
        // TODO add your handling code here:
        ElectorList.getList().clear();
        updateGUIList();
    }//GEN-LAST:event_GUIElectorBtnNewActionPerformed

    private void GUIElectorBtnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnSortActionPerformed
        // TODO add your handling code here:
        ElectorList.orderArrayListByCC();
        updateGUIList();
        GUIElectorList.setSelectedIndex(GUIListSelectedIndex);
    }//GEN-LAST:event_GUIElectorBtnSortActionPerformed

    private void GUIElectorBtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnSearchActionPerformed
        // TODO add your handling code here:
        
        try{
            String textToSearch = GUIElectorTxtBoxSearch.getText();

            if(textToSearch.toCharArray().length<Constants.maxSizeForTextBox){
                int index;

                index = ElectorList.searchElectorByName(textToSearch);
                if (!(MainUtils.isNullOrEmpty(String.valueOf(index)))) {
                    GUIElectorList.setSelectedIndex(index);
                } else {
                    index = ElectorList.searchElectorByCC(textToSearch);
                    if (!(MainUtils.isNullOrEmpty(String.valueOf(index)))) {
                        GUIElectorList.setSelectedIndex(index);
                    } else {
                        JOptionPane.showMessageDialog(Exception, Errors.NoRecordsFound.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
                    }
                }
            }else{
                throw new Exception();
            }
            
        }catch(Exception e){
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(Exception, Errors.MoreThan50Chars.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_GUIElectorBtnSearchActionPerformed

    private void GUIElectorGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GUIElectorGenderActionPerformed

    private void GUIElectorBtnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorBtnOpenActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fileChooser = new JFileChooser();
            ElectorList electorList = new ElectorList();
            fileChooser.setCurrentDirectory(new File(System.getProperty(Constants.userSystemDir)));
            int result = fileChooser.showOpenDialog(chooseFileDialog);
            if (result == JFileChooser.APPROVE_OPTION) {
                electorList.load(fileChooser.getSelectedFile().getAbsolutePath());
                updateGUIList();
            }
        } catch (IOException ex) {
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(Exception, Errors.FileManipulation.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(Exception, Errors.ErrorExecutingAction.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
        } catch (Exception ex) {
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(Exception, Errors.UnavailableFunctionality.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION);
        }

    }//GEN-LAST:event_GUIElectorBtnOpenActionPerformed

    private void GUIElectorTxtBoxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxNameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_GUIElectorTxtBoxNameActionPerformed

    private void GUIElectorTxtBoxNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxNameFocusLost
        // Quando GUIElectorTxtBoxName perde o focus
        
        try{
            if(GUIElectorTxtBoxName.getText().toCharArray().length<Constants.maxSizeForTextBox){
                if (!ElectorList.getList().get(GUIListSelectedIndex).getName().equals(GUIElectorTxtBoxName.getText())) {
                    ElectorList.getList().get(GUIListSelectedIndex).setName(GUIElectorTxtBoxName.getText());
                    updateGUIList();
                }
            }else{
                throw new Exception();
            }
        }catch(Exception e){
           Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, e);
           JOptionPane.showMessageDialog(Exception, Errors.MoreThan50Chars.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION); 
        }
    }//GEN-LAST:event_GUIElectorTxtBoxNameFocusLost

    private void GUIElectorTxtBoxCCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxCCFocusLost
        // TODO add your handling code here:
           
        try{
            if(GUIElectorTxtBoxCC.getText().toCharArray().length==Constants.maxSizeForCC){
                if (ElectorList.getList().get(GUIListSelectedIndex).getCC() != Integer.parseInt(GUIElectorTxtBoxCC.getText())) {
                    ElectorList.getList().get(GUIListSelectedIndex).setCC(Integer.parseInt(GUIElectorTxtBoxCC.getText()));
                    updateGUIList();
                }
            }else{
                throw new Exception();
            }
        }catch(Exception e){
            Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(Exception, Errors.MoreThan8Chars.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION); 
        }
    }//GEN-LAST:event_GUIElectorTxtBoxCCFocusLost

    private void GUIElectorGenderInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_GUIElectorGenderInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_GUIElectorGenderInputMethodTextChanged

    private void GUIElectorTxtBoxNameInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxNameInputMethodTextChanged
        // TODO add your handling code here:
        System.out.println("mudou");
    }//GEN-LAST:event_GUIElectorTxtBoxNameInputMethodTextChanged

    private void GUIElectorTxtBoxBirthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxBirthFocusLost
        // TODO add your handling code here:
                
            try{
                if (ElectorList.getList().get(GUIListSelectedIndex).getBirthDateLikeADate() != LocalDate.parse(GUIElectorTxtBoxBirth.getText(), MainUtils.formatter)) {
                    ElectorList.getList().get(GUIListSelectedIndex).setBirthDate(LocalDate.parse(GUIElectorTxtBoxBirth.getText(), MainUtils.formatter));
                    updateGUIList();
                }
            }catch(DateTimeParseException e){
                Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, e);
                JOptionPane.showMessageDialog(Exception, Errors.DateFormatIncorret.getErro(), Constants.exceptionDialogPopUpTitle, JOptionPane.OK_OPTION); 
            }
    }//GEN-LAST:event_GUIElectorTxtBoxBirthFocusLost

    private void GUIElectorTxtBoxPw2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxPw2FocusLost
        // TODO add your handling code here:
        System.out.println("entrou");
        if (!ElectorList.getList().get(GUIListSelectedIndex).getPassword().equals(GUIElectorTxtBoxPw2.getText()))
            if (GUIElectorTxtBoxPw2.getText().equals(GUIElectorTxtBoxPw.getText())) {
                ElectorList.getList().get(GUIListSelectedIndex).setPassword(GUIElectorTxtBoxPw2.getText());
                updateGUIList();
                System.out.println("mudou");
            } 
    }//GEN-LAST:event_GUIElectorTxtBoxPw2FocusLost

    private void GUIElectorTxtBoxNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxNameKeyReleased
        // TODO add your handling code here:
        if (ElectorList.getList().get(GUIListSelectedIndex).getName().equals(GUIElectorTxtBoxName.getText())) {
            ElectorList.getList().get(GUIListSelectedIndex).setName(GUIElectorTxtBoxName.getText());
            updateGUIList();
        }
    }//GEN-LAST:event_GUIElectorTxtBoxNameKeyReleased

    private void GUIElectorTxtBoxCCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxCCKeyReleased
        // TODO add your handling code here:
        if (ElectorList.getList().get(GUIListSelectedIndex).getCC() != Integer.parseInt(GUIElectorTxtBoxCC.getText())) {
            ElectorList.getList().get(GUIListSelectedIndex).setCC(Integer.parseInt(GUIElectorTxtBoxCC.getText()));
            updateGUIList();
        }
    }//GEN-LAST:event_GUIElectorTxtBoxCCKeyReleased

    private void GUIElectorGenderItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_GUIElectorGenderItemStateChanged
        // TODO add your handling code here:
        if(ElectorList.getList().get(GUIListSelectedIndex).getGender() != GUIElectorGender.getSelectedItem().toString().charAt(0)){
            ElectorList.getList().get(GUIListSelectedIndex).setGender(GUIElectorGender.getSelectedItem().toString().charAt(0));
            updateGUIList();
        }
    }//GEN-LAST:event_GUIElectorGenderItemStateChanged

    private void GUIElectorTxtBoxBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GUIElectorTxtBoxBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GUIElectorTxtBoxBirthActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        if(fc.showOpenDialog(this)== JFileChooser.APPROVE_OPTION){
            try {
                Image img = ImageIO.read(fc.getSelectedFile());
                GUIElectorLabel2Image.setIcon(MainUtils.resizeIcon(new ImageIcon(img), GUIElectorLabel2Image.getWidth(), GUIElectorLabel2Image.getHeight()));
                ElectorList.getList().get(GUIListSelectedIndex).setPhoto(new ImageIcon(img));
            } catch (IOException ex) {
                Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIElector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIElector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIElector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIElector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            GUIElector dialog = null;
            try {
                dialog = new GUIElector(new javax.swing.JFrame(), true);
            } catch (IOException ex) {
                Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException | ParseException ex) {
                Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(GUIElector.class.getName()).log(Level.SEVERE, null, ex);
            }
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Exception;
    private javax.swing.JButton GUIElectorBtnClose;
    private javax.swing.JButton GUIElectorBtnDeleteElector;
    private javax.swing.JButton GUIElectorBtnFirst;
    private javax.swing.JButton GUIElectorBtnLast;
    private javax.swing.JButton GUIElectorBtnNew;
    private javax.swing.JButton GUIElectorBtnNewElector;
    private javax.swing.JButton GUIElectorBtnNext;
    private javax.swing.JButton GUIElectorBtnOpen;
    private javax.swing.JButton GUIElectorBtnPrev;
    private javax.swing.JButton GUIElectorBtnRandomElector;
    private javax.swing.JButton GUIElectorBtnSave;
    private javax.swing.JButton GUIElectorBtnSearch;
    private javax.swing.JButton GUIElectorBtnSort;
    private javax.swing.JComboBox<String> GUIElectorGender;
    private javax.swing.JLabel GUIElectorIdadeLbl;
    private javax.swing.JLabel GUIElectorLabel2Image;
    private javax.swing.JList<String> GUIElectorList;
    private javax.swing.JLabel GUIElectorNumLbl;
    private javax.swing.JPanel GUIElectorPanelBottomNav;
    private javax.swing.JPanel GUIElectorPanelElector;
    private javax.swing.JScrollPane GUIElectorPanelElectorList;
    private javax.swing.JPanel GUIElectorPanelElectorNum;
    private javax.swing.JPanel GUIElectorPanelImage;
    private javax.swing.JTextField GUIElectorTxtBoxBirth;
    private javax.swing.JTextField GUIElectorTxtBoxCC;
    private javax.swing.JTextField GUIElectorTxtBoxName;
    private javax.swing.JTextField GUIElectorTxtBoxPw;
    private javax.swing.JTextField GUIElectorTxtBoxPw2;
    private javax.swing.JTextField GUIElectorTxtBoxSearch;
    private javax.swing.JDialog chooseFileDialog;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
